DROP TABLE rata;
DROP TABLE persoana;
DROP TABLE contract_j;
DROP TABLE contract_m;

CREATE TABLE Persoana(
id_p NUMBER PRIMARY KEY,
nume VARCHAR2(40),
email VARCHAR2(40),
adresa VARCHAR2(40));

CREATE TABLE Contract_j(
id_cj NUMBER PRIMARY KEY, 
data DATE, 
obiect VARCHAR2(25), 
onorar NUMBER, 
nr_pagini NUMBER, 
id_client NUMBER, 
id_avocat NUMBER);

CREATE TABLE Contract_m(
id_cm NUMBER PRIMARY KEY, 
data DATE, 
functie VARCHAR2(20), 
salar_baza NUMBER, 
comision NUMBER, 
id_angajat NUMBER);

CREATE TABLE Rata(
id_cj NUMBER, 
id_r NUMBER, 
data DATE, 
suma NUMBER); 

ALTER TABLE rata ADD CONSTRAINT pk_rata PRIMARY KEY (id_cj, id_r);
ALTER TABLE rata ADD CONSTRAINT fk_rata_contract_j FOREIGN KEY (id_cj) REFERENCES contract_j (id_cj);

--f adaugare atribut valoare_totala

ALTER TABLE Contract_j
ADD tva NUMBER;

--Inserare date
--inserare date in tabelul Persoana
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (1, ‘Popescu Ion’, ’popescuion@yahoo.com’,’strada Florilor’);
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (2, ’Ionescu Maria’, ’ionescumaria@yahoo.com’, ’strada Zambilelor’);
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (3, ’Vasile Andrei’, ’vasileandrei@yahoo.com’, ’strada Juravleni’);
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (4, ’Anghelescu Matei’, anghelescumatei@yahoo.com’, ’strada Copacilor’);
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (5, ’Tudorache Andreea’, ’tudoracheandreea@yahoo.com’, ’strada V.Alecsandri’);
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (6, 'Popa Ana', 'popaana@yahoo.com', 'strada Plopilor');
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (7, 'Dumitru Ionut', 'dumitruionut@yahoo.com', 'strada Stejarilor');
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (8, 'Georgescu Elena', 'georgescuelena@yahoo.com', 'strada Mesteacanului');
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (9, 'Constantin Laura', 'constantinlaura@yahoo.com', 'strada Fagului');
INSERT INTO Persoana(id_p, nume, email, adresa) VALUES (10, 'Ivanescu Florin', 'ivanescuflorin@yahoo.com', 'strada Salcamilor');

--inserare in tabelul contract_j
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (1, '2023-05-01', 'Divorț', 1500, 10, 1, 1);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (2, '2023-04-15', 'Cumpărare imobil', 2000, 15, 2, 1);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (3, '2023-05-10', 'Testament', 800, 5, 3, 2);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (4, '2023-05-05', 'Contract de închiriere', 1200, 8, 4, 2);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (5, '2023-05-12', 'Dreptul muncii', 1800, 12, 6, 3);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (6, '2023-05-18', 'Litigiu proprietate', 2500, 18, 7, 4);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (7, '2023-05-05', 'Divorț', 1500, 10, 8, 3);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (8, '2023-05-20', 'Contract de închiriere', 1000, 8, 9, 4);
INSERT INTO Contract_j(id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat) VALUES (9, '2023-05-15', 'Testament', 800, 5, 10, 3);

--inserare in tabelul contract_m
INSERT INTO Contract_m(id_cm, data, functie, salar_baza, comision, id_angajat) VALUES (1, '2023-05-01', 'Avocat', 5000, 0.1, 1);
INSERT INTO Contract_m(id_cm, data, functie, salar_baza, comision, id_angajat) VALUES (2, '2023-05-01', 'Avocat', 5000, 0.15, 2);
INSERT INTO Contract_m(id_cm, data, functie, salar_baza, comision, id_angajat) VALUES (3, '2023-05-01', 'Avocat', 5000, 0.12, 3);
INSERT INTO Contract_m(id_cm, data, functie, salar_baza, comision, id_angajat) VALUES (4, '2023-05-01', 'Avocat', 5000, 0.18, 4);

--inserare in tabelul rata
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (1, 1, '2023-05-05', 500);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (1, 2, '2023-05-10', 500);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (1, 3, '2023-05-15', 500);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (2, 1, '2023-05-08', 1000);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (3, 1, '2023-05-12', 200);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (4, 1, '2023-05-07', 800);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (5, 1, '2023-05-15', 600);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (5, 2, '2023-05-20', 600);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (6, 1, '2023-05-22', 1250);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (7, 1, '2023-05-10', 500);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (8, 1, '2023-05-25', 400);
INSERT INTO Rata(id_cj, id_r, data, suma) VALUES (9, 1, '2023-05-18', 400);



--02
--a
ALTER TABLE Contract_j
ADD CONSTRAINT chk_onorar_range CHECK (onorar >= 100 AND onorar <= 20000);

--b
ALTER TABLE Contract_m
ADD CONSTRAINT chk_comision_func CHECK (functie = 'avocat' OR comision IS NULL);

--03
--a
SELECT *
FROM Contract_j
WHERE YEAR(data) = 2022 AND nr_pagini BETWEEN 10 AND 20;
--b 
SELECT *
FROM Contract_m
WHERE comision = 0.4
ORDER BY salar_baza DESC;

--04
--a
SELECT Persoana.nume
FROM Persoana
JOIN Contract_j ON Persoana.id_p = Contract_j.id_client
JOIN Persoana AS Avocat ON Contract_j.id_avocat = Avocat.id_p
WHERE Avocat.nume = 'Ionescu George';
--b
SELECT cj.id_cj, r1.id_r AS id_r1, r1.data AS data1, r1.suma AS suma1, r2.id_r AS id_r2, r2.data AS data2, r2.suma AS suma2
FROM Contract_j cj
JOIN Rata r1 ON cj.id_cj = r1.id_cj
LEFT JOIN Rata r2 ON cj.id_cj = r2.id_cj AND r1.id_r + 1 = r2.id_r
WHERE r1.id_r % 2 = 1;

--05
--a
SELECT *
FROM Contract_j
WHERE onorar > (
  SELECT onorar
  FROM Contract_j
  WHERE id_cj = 123
) ;
--b
SELECT nume
FROM Persoana
WHERE EXISTS (
  SELECT id_avocat
  FROM Contract_j
  WHERE id_avocat = Persoana.id_p
)
AND NOT EXISTS (
  SELECT id_avocat
  FROM Contract_j
  WHERE id_avocat = Persoana.id_p
  GROUP BY id_avocat
  HAVING COUNT(*) > 1
);

--06
--a
SELECT Persoana.nume, AVG(Contract_m.salar_baza) AS medie_salariu
FROM Persoana
JOIN Contract_m ON Persoana.id_p = Contract_m.id_angajat
WHERE YEAR(Contract_m.data) = 2022
GROUP BY Persoana.nume;
--b
SELECT id_cj
FROM Contract_j
JOIN Rata ON Contract_j.id_cj = Rata.id_cj
GROUP BY id_cj
HAVING SUM(Rata.suma) < Contract_j.onorar
AND COUNT(Rata.id_r) > 0;

--07
--a
INSERT INTO Contract_m (id_cm, data, functie, salar_baza, comision, id_angajat)
VALUES (80, '01-SEP-2022', 'avocat', 10000, 12.5, 13);
--b
DELETE FROM Contract_j
WHERE YEAR(data) < YEAR(DATEADD(year, -1, '01-SEP-2022'))
AND id_cj NOT IN (
  SELECT id_cj
  FROM Rata
);
--c
UPDATE Contract_m
SET salar_baza = salar_baza * 1.02
WHERE functie = 'avocat'
AND YEAR(GETDATE()) - YEAR(data) > 5;

--08
CREATE PROCEDURE AdaugaExceptii
AS
BEGIN
  -- Verificăm existența tabelei "Exceptii" și o ștergem dacă există deja
  IF OBJECT_ID('Exceptii', 'U') IS NOT NULL
    DROP TABLE Exceptii;
  
  -- Cream tabela "Exceptii" cu structura specificată
  CREATE TABLE Exceptii (
    id_cj INT,
    id_r INT,
    data DATE,
    suma NUMERIC(10, 2),
    natura_exceptiei VARCHAR(100)
  );
  
  -- Adăugăm liniile din tabela "Rata" care îndeplinesc condițiile în tabela "Exceptii"
  INSERT INTO Exceptii (id_cj, id_r, data, suma, natura_exceptiei)
  SELECT Rata.id_cj, Rata.id_r, Rata.data, Rata.suma, 'Data nevalida' AS natura_exceptiei
  FROM Rata
  JOIN Contract_j ON Rata.id_cj = Contract_j.id_cj
  WHERE Rata.data <= Contract_j.data
  
  UNION
  
  SELECT Rata.id_cj, Rata.id_r, Rata.data, Rata.suma, 'Suma depasita' AS natura_exceptiei
  FROM Rata
  JOIN Contract_j ON Rata.id_cj = Contract_j.id_cj
  WHERE Rata.suma > Contract_j.onorar;
  
END;

--09
--a
CREATE TRIGGER VerificaSalarBaza
ON Contract_m
AFTER UPDATE
AS
BEGIN
  IF UPDATE(salar_baza)
  BEGIN
    IF EXISTS (
      SELECT *
      FROM inserted
      INNER JOIN deleted ON inserted.id_cm = deleted.id_cm
      WHERE inserted.salar_baza <= deleted.salar_baza
    )
    BEGIN
      RAISERROR ('Valoarea noua a salarului de baza trebuie sa fie mai mare decat valoarea precedenta.', 16, 1)
      ROLLBACK TRANSACTION;
      RETURN;
    END;
  END;
END;

--b
CREATE TRIGGER InsteadOfInsert_Clienti_Vasile_Andrei
ON Clienti_Vasile_Andrei
INSTEAD OF INSERT
AS
BEGIN
  -- Adăugăm înregistrările în tabela de bază (Contract_j)
  INSERT INTO Contract_j (id_cj, data, obiect, onorar, nr_pagini, id_client, id_avocat)
  SELECT id_cj, data, obiect, onorar, nr_pagini, id_client, (SELECT id_p FROM Persoana WHERE nume = 'Andrei Vasile')
  FROM inserted;
  
  -- Actualizăm numele avocatului pentru înregistrările adăugate
  UPDATE Contract_j
  SET id_avocat = (SELECT id_p FROM Persoana WHERE nume = 'Andrei Vasile')
  WHERE id_cj IN (SELECT id_cj FROM inserted);
  
  -- Actualizăm numele clientului pentru înregistrările adăugate
  UPDATE Contract_j
  SET id_client = (SELECT id_p FROM Persoana WHERE nume = inserted.nume_client)
  FROM inserted
  WHERE Contract_j.id_cj IN (SELECT id_cj FROM inserted);
  
END;